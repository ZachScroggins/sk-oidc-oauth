name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm

      - name: Install Dependencies
        run: npm i

      - name: Test
        run: npm run test:cov

      - name: Report Coverage
        # Also generate the report if tests are failing
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          file-coverage-mode: all

      # - name: Create Coverage Badge - Lines
      #   uses: wjervis7/vitest-badge-action@v1.0.0
      #   if: always() # run whether steps succeed or not
      #   with:
      #     result-type: lines
      #     upload-badge: false
      #     badge-text: Lines
      #     badge-path: ./static/lines-badge.svg
      #     vitest-config-path: ./vite.config.ts

      # - name: Create Coverage Badge - Statements
      #   uses: wjervis7/vitest-badge-action@v1.0.0
      #   if: always() # run whether steps succeed or not
      #   with:
      #     result-type: statements
      #     upload-badge: false
      #     badge-text: 'Statements'
      #     badge-path: './static/statements-badge.svg'

      # - name: Create Coverage Badge - Functions
      #   uses: wjervis7/vitest-badge-action@v1.0.0
      #   if: always() # run whether steps succeed or not
      #   with:
      #     result-type: functions
      #     upload-badge: false
      #     badge-text: 'Functions'
      #     badge-path: './static/functions-badge.svg'

      # - name: Create Coverage Badge - Branches
      #   uses: wjervis7/vitest-badge-action@v1.0.0
      #   if: always() # run whether steps succeed or not
      #   with:
      #     result-type: branches
      #     upload-badge: false
      #     badge-text: 'Branches'
      #     badge-path: './static/branches-badge.svg'

      - name: NPM Auth
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Copy .npmrc
        run: cp .npmrc $HOME/.npmrc

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          PUBLIC_AZURE_CLIENT_ID: ${{ secrets.PUBLIC_AZURE_CLIENT_ID }}
          PUBLIC_AZURE_TENANT_ID: ${{ secrets.PUBLIC_AZURE_TENANT_ID }}

      - name: Changesets output
        run: echo -e ${{join(steps.changesets.outputs.*, '\n')}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          PUBLIC_AZURE_CLIENT_ID: ${{ secrets.PUBLIC_AZURE_CLIENT_ID }}
          PUBLIC_AZURE_TENANT_ID: ${{ secrets.PUBLIC_AZURE_TENANT_ID }}
      # - name: Create Coverage Badge - Lines
      #   uses: wjervis7/vitest-badge-action@v1.0.0
      #   if: always() # run whether steps succeed or not
      #   with:
      #     result-type: lines
      #     badge-text: Lines
      #     badge-path: lines-badge.svg
      #     gist-token: ${{ secrets.GIST_TOKEN }}
      #     gist-url: https://gist.github.com/ZachScroggins/b8b49faa30e1c89ee7edefe90be9ca6f

      # - name: Commit Badges After Merge
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   if: steps.changesets.outputs.published == 'false'
      #   with:
      #     file_pattern: './static/*-badge.svg'
